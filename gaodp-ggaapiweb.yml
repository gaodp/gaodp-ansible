---

- hosts: gaodp-ggaapiweb
  sudo: true

  vars_prompt:
    - name: kueuser
      prompt: "Kue username"
      private: false

    - name: kuepass
      prompt: "Kue password"
      private: false

    - name: configfirewall
      prompt: "Configure default firewall settings? (y/n)"
      default: 'n'
      private: false

  tasks:
    - include: gaodp-firewall.yml
      when: configfirewall == 'y'

    - name: add mongodb key
      apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=7F0CEB10 state=present
    - name: add mongodb repository
      apt_repository: repo='deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' state=present
    - name: install mongodb
      apt: name=mongodb-org update_cache=yes state=latest
    - name: install mongodb config
      copy: src=files/mongod.conf dest=/etc/mongod.conf
    - name: start mongodb
      service: name=mongod state=restarted

    - name: install git
      apt: name=git state=latest
    - name: install nginx
      apt: name=nginx state=latest
    - name: install redis-server
      apt: name=redis-server state=latest
    - name: install nodejs sources to apt
      shell: "curl -sL https://deb.nodesource.com/setup | sudo bash -"
    - name: install nodejs
      apt: name=nodejs state=latest

    - name: create /var/www
      file: path=/var/www state=directory owner=www-data group=www-data
    - name: create /var/log/gga-api.log
      file: path=/var/log/gga-api.log state=touch owner=www-data group=www-data
    - name: set shell for www-data
      command: chsh -s /bin/bash www-data
    - name: clone gga-api repo
      sudo_user: www-data
      git: repo=https://github.com/gaodp/gga-api.git dest=/var/www/gga-api

    - name: install gga-api dependencies
      sudo_user: www-data
      npm: path=/var/www/gga-api

    - name: install upstart script
      template: src=files/init/gga-api.conf dest=/etc/init/gga-api.conf owner=root group=root mode=0644
    - name: (re)start gga-api
      service: name=gga-api state=restarted

    - name: install gga-api nginx site
      copy: src=files/nginx/gga-api.conf dest=/etc/nginx/sites-available/ owner=root group=root mode=0644
    - name: symlink to sites-enabled
      file: src=/etc/nginx/sites-available/gga-api.conf dest=/etc/nginx/sites-enabled/gga-api.conf owner=root group=root mode=0644 state=link
    - name: reload nginx
      command: nginx -s reload

    - name: Add sessions cron
      cron: 'name="sessions" job="curl http://localhost:8091/trigger/sessions" minute=0 hour="4,16" month="1-4"'
    - name: Add members cron
      cron: 'name="members" job="curl http://localhost:8091/trigger/members/session/current" minute=5 hour="4,16" month="1-4"'
    - name: Add committees cron
      cron: 'name="committees" job="curl http://localhost:8091/trigger/committees/session/current" minute=10 hour="4,16" month="1-4"'
    - name: Add legislation cron
      cron: 'name="legislation" job="curl http://localhost:8091/trigger/legislation/session/current" minute=15 hour="4,16" month="1-4"'
    - name: Add votes cron
      cron: 'name="votes" job="curl http://localhost:8091/trigger/votes/session/current" minute=30 hour="4,16" month="1-4"'
    - name: Add legislation detail cron
      cron: 'name="legislationDetail" job="curl http://localhost:8091/trigger/legislationDetail/session/current" minute=45 hour="4,16" month="1-4"'
